// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int _keyboard;

    /** Initializes the keyboard. */
    function void init() {
      let _keyboard = 24576;
      return;
    }

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      return Memory.peek(_keyboard);
    }

    /**
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
      var char c, d;
      let c = 0;
      do Output.printChar(0);
      while (c = 0) {
        let c = Keyboard.keyPressed();
      }
      let d = c;
      while (c = d) {
        let c = Keyboard.keyPressed();
      }
      if ((d > 31) & (d < 127)) {
        do Output.backSpace();
        do Output.printChar(d);
      }
      return d;
    }

    /**
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
      var String s;
      var char c;
      let s = String.new(64);
      do Output.printString(message);
      while(true) {
        let c = Keyboard.readChar();
        if (c = 128) {
          do Output.backSpace();
          do Output.println();
          return s;
        } else {
          if (c = 129) {
            if (s.length() > 0) {
              do s.eraseLastChar();
              do Output.backSpace();
              do Output.backSpace();
            } else {
              do Output.backSpace();
            }
          } else {
            do s.appendChar(c);
          }
        }
      }
      return "";
    }

    /**
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
      var String s;
      var int i;
      let s = Keyboard.readLine(message);
      let i = s.intValue();
      do s.dispose();
      return i;
    }
}
